{
	"info": {
		"_postman_id": "b2af04a6-5395-4228-b6f1-8620fbab2b9b",
		"name": "Trello api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "43195172"
	},
	"item": [
		{
			"name": "Create & Delete",
			"item": [
				{
					"name": "create board without name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400 & Response time is less than 3s\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"pm.test(\"Verify That i Can't Create Board without Name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"invalid value for name\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{url}}1/boards/?key={{key}}&token={{token}}",
							"host": [
								"{{url}}1"
							],
							"path": [
								"boards",
								""
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "create board with name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.environment.set(\"myBoardID\", jsonData.id);\r",
									"\r",
									"pm.test(\"Status code is 200 & Response time is less than 3s\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"pm.test(\"Verify That The Board is created\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"Test Board\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{url}}1/boards/?name=Test Board&key={{key}}&token={{token}}",
							"host": [
								"{{url}}1"
							],
							"path": [
								"boards",
								""
							],
							"query": [
								{
									"key": "name",
									"value": "Test Board"
								},
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Board \"Verify the Board is created or not\"",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 & Response time is less than 3s\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"pm.test(\"Verify That The Board is created\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"Test Board\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}1/boards/{{myBoardID}}?key={{key}}&token={{token}}",
							"host": [
								"{{url}}1"
							],
							"path": [
								"boards",
								"{{myBoardID}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 & Response time is less than 3s\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"pm.test(\"Verify That The Board is deleted\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData._value).to.eql(null);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}1/boards/{{myBoardID}}?key={{key}}&token={{token}}",
							"host": [
								"{{url}}1"
							],
							"path": [
								"boards",
								"{{myBoardID}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Board \"Verify the Board is deleted\"",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404 Not Found & Response time is less than 3s\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"The requested resource was not found\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}1/boards/{{myBoardID}}?key={{key}}&token={{token}}",
							"host": [
								"{{url}}1"
							],
							"path": [
								"boards",
								"{{myBoardID}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Create List & Card & checkList",
			"item": [
				{
					"name": "create board with name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.environment.set(\"myBoardID\", jsonData.id);\r",
									"\r",
									"pm.test(\"Status code is 200 & Response time is less than 3s\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"pm.test(\"Verify That The Board is created\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"Test Board\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{url}}1/boards/?name=Test Board&key={{key}}&token={{token}}",
							"host": [
								"{{url}}1"
							],
							"path": [
								"boards",
								""
							],
							"query": [
								{
									"key": "name",
									"value": "Test Board"
								},
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create List in Board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.environment.set(\"ListID\", jsonData.id);\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 200 & Response time is less than 3s\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"pm.test(\"Verify That The List is created\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"newList\");\r",
									"    pm.expect(jsonData.type).to.eql(null);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{url}}1/lists?name=newList&idBoard={{myBoardID}}&key={{key}}&token={{token}}",
							"host": [
								"{{url}}1"
							],
							"path": [
								"lists"
							],
							"query": [
								{
									"key": "name",
									"value": "newList"
								},
								{
									"key": "idBoard",
									"value": "{{myBoardID}}"
								},
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify The List is Created",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200 & Response time is less than 3s\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"pm.test(\"Verify That The Board is created\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"newList\");\r",
									"    pm.expect(jsonData.type).to.eql(null);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}1/lists/{{ListID}}?key={{key}}&token={{token}}",
							"host": [
								"{{url}}1"
							],
							"path": [
								"lists",
								"{{ListID}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Name by Put",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 & Response time is less than 3s\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"pm.test(\"Verify That The name of List is change\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"newNameList\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{url}}1/lists/{{ListID}}?key={{key}}&token={{token}}&name=newNameList",
							"host": [
								"{{url}}1"
							],
							"path": [
								"lists",
								"{{ListID}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								},
								{
									"key": "name",
									"value": "newNameList"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "create new card in List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.environment.set(\"CardID\", jsonData.id);\r",
									"\r",
									"pm.test(\"Status code is 200 & Response time is less than 3s\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"pm.test(\"Verify That The Card is created\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"newCard\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{url}}1/cards?idList={{ListID}}&key={{key}}&token={{token}}&name=newCard",
							"host": [
								"{{url}}1"
							],
							"path": [
								"cards"
							],
							"query": [
								{
									"key": "idList",
									"value": "{{ListID}}"
								},
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								},
								{
									"key": "name",
									"value": "newCard"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update card name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 & Response time is less than 3s\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"pm.test(\"Verify That The Card name is change\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"newNameCard\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{url}}1/cards/{{CardID}}?key={{key}}&token={{token}}&name=newNameCard",
							"host": [
								"{{url}}1"
							],
							"path": [
								"cards",
								"{{CardID}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								},
								{
									"key": "name",
									"value": "newNameCard"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create checkList in Card",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.environment.set(\"CheckListID\", jsonData.id);\r",
									"\r",
									"pm.test(\"Status code is 200 & Response time is less than 3s\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"pm.test(\"Verify That The checkList is created\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"checkListName\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{url}}1/cards/{{CardID}}/checklists?key={{key}}&token={{token}}&name=checkListName",
							"host": [
								"{{url}}1"
							],
							"path": [
								"cards",
								"{{CardID}}",
								"checklists"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								},
								{
									"key": "name",
									"value": "checkListName"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Check the checklist is created",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 & Response time is less than 3s\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"pm.test(\"Verify That The checkList is created\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"checkListName\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}1/checklists/{{CheckListID}}?key={{key}}&token={{token}}",
							"host": [
								"{{url}}1"
							],
							"path": [
								"checklists",
								"{{CheckListID}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update name the checkList",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 & Response time is less than 3s\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"pm.test(\"Verify That The checkList name is change\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"newCheckListName\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{url}}1/checklists/{{CheckListID}}?key={{key}}&token={{token}}&name=newCheckListName",
							"host": [
								"{{url}}1"
							],
							"path": [
								"checklists",
								"{{CheckListID}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								},
								{
									"key": "name",
									"value": "newCheckListName"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "add items in checkList",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.environment.set(\"itemsIN_CheckListID\", jsonData.id);\r",
									"\r",
									"pm.test(\"Status code is 200 & Response time is less than 3s\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"pm.test(\"Verify add The items in checkList is created\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"Test\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{url}}1/checklists/{{CheckListID}}/checkItems?name=Test&key={{key}}&token={{token}}",
							"host": [
								"{{url}}1"
							],
							"path": [
								"checklists",
								"{{CheckListID}}",
								"checkItems"
							],
							"query": [
								{
									"key": "name",
									"value": "Test"
								},
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "verify the items in CheckList is created",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 & Response time is less than 3s\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"pm.test(\"Verify add The items in checkList is created\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"Test\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}1/checklists/{{CheckListID}}/checkItems/{{itemsIN_CheckListID}}?key={{key}}&token={{token}}",
							"host": [
								"{{url}}1"
							],
							"path": [
								"checklists",
								"{{CheckListID}}",
								"checkItems",
								"{{itemsIN_CheckListID}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete items in checkList",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 & Response time is less than 3s\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}1/checklists/{{CheckListID}}/checkItems/{{itemsIN_CheckListID}}?key={{key}}&token={{token}}",
							"host": [
								"{{url}}1"
							],
							"path": [
								"checklists",
								"{{CheckListID}}",
								"checkItems",
								"{{itemsIN_CheckListID}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "verify the items in CheckList is deleted",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404 & Response time is less than 3s\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}1/checklists/{{CheckListID}}/checkItems/{{itemsIN_CheckListID}}?key={{key}}&token={{token}}",
							"host": [
								"{{url}}1"
							],
							"path": [
								"checklists",
								"{{CheckListID}}",
								"checkItems",
								"{{itemsIN_CheckListID}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete checkList",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 & Response time is less than 3s\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}1/checklists/{{CheckListID}}?key={{key}}&token={{token}}",
							"host": [
								"{{url}}1"
							],
							"path": [
								"checklists",
								"{{CheckListID}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Check the checklist is deletet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404 & Response time is less than 3s\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}1/checklists/{{CheckListID}}?key={{key}}&token={{token}}",
							"host": [
								"{{url}}1"
							],
							"path": [
								"checklists",
								"{{CheckListID}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Card",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 & Response time is less than 3s\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}1/cards/{{CardID}}?key={{key}}&token={{token}}",
							"host": [
								"{{url}}1"
							],
							"path": [
								"cards",
								"{{CardID}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "archive list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 & Response time is less than 3s\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{url}}1/lists/{{ListID}}/closed?key={{key}}&token={{token}}&value=true",
							"host": [
								"{{url}}1"
							],
							"path": [
								"lists",
								"{{ListID}}",
								"closed"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								},
								{
									"key": "value",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify The List is deleted",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200 & Response time is less than 3s\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}1/lists/{{ListID}}?key={{key}}&token={{token}}",
							"host": [
								"{{url}}1"
							],
							"path": [
								"lists",
								"{{ListID}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 & Response time is less than 3s\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"pm.test(\"Verify That The Board is deleted\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData._value).to.eql(null);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}1/boards/{{myBoardID}}?key={{key}}&token={{token}}",
							"host": [
								"{{url}}1"
							],
							"path": [
								"boards",
								"{{myBoardID}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Board \"Verify the Board is deleted",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404 Not Found & Response time is less than 3s\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"The requested resource was not found\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}1/boards/{{myBoardID}}?key={{key}}&token={{token}}",
							"host": [
								"{{url}}1"
							],
							"path": [
								"boards",
								"{{myBoardID}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "https://api.trello.com/",
			"type": "string"
		},
		{
			"key": "key",
			"value": "bc09926469a6f741b84690316b379bb9",
			"type": "string"
		},
		{
			"key": "token",
			"value": "ATTAce7f9632f051a619646ed65dd2577b7164060def0c202c931532581eef05faeb1A641656",
			"type": "string"
		}
	]
}